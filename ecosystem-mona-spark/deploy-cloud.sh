#!/bin/bash

# Script de d√©ploiement Cloud pour MONA x SPARK
# Supporte Railway, Render, et DigitalOcean App Platform

set -e

echo "üöÄ D√©ploiement Cloud MONA x SPARK"
echo "=================================="

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonction pour afficher les messages
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# V√©rification des pr√©requis
check_prerequisites() {
    log_info "V√©rification des pr√©requis..."
    
    # V√©rifier si Docker est install√©
    if ! command -v docker &> /dev/null; then
        log_error "Docker n'est pas install√©. Veuillez l'installer d'abord."
        exit 1
    fi
    
    # V√©rifier si Node.js est install√©
    if ! command -v node &> /dev/null; then
        log_error "Node.js n'est pas install√©. Veuillez l'installer d'abord."
        exit 1
    fi
    
    # V√©rifier si npm est install√©
    if ! command -v npm &> /dev/null; then
        log_error "npm n'est pas install√©. Veuillez l'installer d'abord."
        exit 1
    fi
    
    log_success "Tous les pr√©requis sont satisfaits"
}

# Build de l'application
build_application() {
    log_info "Build de l'application..."
    
    # Installation des d√©pendances
    npm install
    
    # Build de l'application
    npm run build
    
    log_success "Build termin√© avec succ√®s"
}

# D√©ploiement sur Railway
deploy_railway() {
    log_info "D√©ploiement sur Railway..."
    
    # V√©rifier si Railway CLI est install√©
    if ! command -v railway &> /dev/null; then
        log_warning "Railway CLI n'est pas install√©. Installation..."
        npm install -g @railway/cli
    fi
    
    # Login Railway (si n√©cessaire)
    if ! railway whoami &> /dev/null; then
        log_info "Connexion √† Railway..."
        railway login
    fi
    
    # D√©ploiement
    railway up
    
    log_success "D√©ploiement Railway termin√©"
}

# D√©ploiement sur Render
deploy_render() {
    log_info "D√©ploiement sur Render..."
    
    # V√©rifier si le fichier render.yaml existe
    if [ ! -f "render.yaml" ]; then
        log_error "Fichier render.yaml manquant"
        exit 1
    fi
    
    log_info "Pour d√©ployer sur Render:"
    log_info "1. Connectez-vous √† votre compte Render"
    log_info "2. Cr√©ez un nouveau service Blueprint"
    log_info "3. Connectez ce repository"
    log_info "4. Render utilisera automatiquement render.yaml"
    
    log_success "Configuration Render pr√™te"
}

# D√©ploiement sur DigitalOcean App Platform
deploy_digitalocean() {
    log_info "D√©ploiement sur DigitalOcean App Platform..."
    
    # V√©rifier si doctl est install√©
    if ! command -v doctl &> /dev/null; then
        log_warning "DigitalOcean CLI (doctl) n'est pas install√©"
        log_info "Installez doctl depuis: https://docs.digitalocean.com/reference/doctl/how-to/install/"
    fi
    
    log_info "Pour d√©ployer sur DigitalOcean:"
    log_info "1. Connectez-vous avec: doctl auth init"
    log_info "2. Cr√©ez une app: doctl apps create --spec app.yaml"
    
    log_success "Configuration DigitalOcean pr√™te"
}

# Menu principal
show_menu() {
    echo ""
    echo "Choisissez votre plateforme de d√©ploiement:"
    echo "1) Railway (Recommand√© - Simple et rapide)"
    echo "2) Render (Gratuit avec limitations)"
    echo "3) DigitalOcean App Platform (Payant mais robuste)"
    echo "4) V√©rifier les pr√©requis seulement"
    echo "5) Build local seulement"
    echo "6) Quitter"
    echo ""
    read -p "Votre choix (1-6): " choice
}

# Fonction principale
main() {
    echo ""
    log_info "Bienvenue dans le d√©ploiement Cloud MONA x SPARK"
    
    while true; do
        show_menu
        
        case $choice in
            1)
                check_prerequisites
                build_application
                deploy_railway
                break
                ;;
            2)
                check_prerequisites
                build_application
                deploy_render
                break
                ;;
            3)
                check_prerequisites
                build_application
                deploy_digitalocean
                break
                ;;
            4)
                check_prerequisites
                break
                ;;
            5)
                check_prerequisites
                build_application
                break
                ;;
            6)
                log_info "Au revoir !"
                exit 0
                ;;
            *)
                log_error "Choix invalide. Veuillez choisir 1-6."
                ;;
        esac
    done
    
    log_success "D√©ploiement termin√© !"
    echo ""
    log_info "Prochaines √©tapes:"
    log_info "1. Configurez vos variables d'environnement"
    log_info "2. Testez votre application"
    log_info "3. Configurez votre domaine personnalis√©"
    echo ""
}

# Ex√©cution du script
main "$@" 