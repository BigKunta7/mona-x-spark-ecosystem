#!/bin/bash

# MONA x SPARK - V√©rification Mod√®le Business MONA
# V√©rifie que le mod√®le business MONA est correctement int√©gr√©

set -e

# Couleurs pour l'affichage
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

echo -e "${PURPLE}üéØ V√©rification Mod√®le Business MONA x SPARK${NC}"
echo -e "${CYAN}Int√©gration du mod√®le business MONA dans l'architecture${NC}"
echo ""

# Fonction pour v√©rifier les types MONA
check_mona_types() {
    echo -e "${BLUE}üìã V√©rification types MONA...${NC}"
    
    if [ -f "shared/types/mona-business-model.ts" ]; then
        echo -e "${GREEN}‚úÖ Types MONA pr√©sents${NC}"
        
        # V√©rifier les interfaces principales
        if grep -q "ArtistScoringSystem" shared/types/mona-business-model.ts; then
            echo -e "  ‚úÖ ArtistScoringSystem"
        else
            echo -e "${RED}  ‚ùå ArtistScoringSystem manquant${NC}"
            return 1
        fi
        
        if grep -q "MonaOffer" shared/types/mona-business-model.ts; then
            echo -e "  ‚úÖ MonaOffer"
        else
            echo -e "${RED}  ‚ùå MonaOffer manquant${NC}"
            return 1
        fi
        
        if grep -q "ContactTemplate" shared/types/mona-business-model.ts; then
            echo -e "  ‚úÖ ContactTemplate"
        else
            echo -e "${RED}  ‚ùå ContactTemplate manquant${NC}"
            return 1
        fi
        
        if grep -q "DevelopmentBlock" shared/types/mona-business-model.ts; then
            echo -e "  ‚úÖ DevelopmentBlock"
        else
            echo -e "${RED}  ‚ùå DevelopmentBlock manquant${NC}"
            return 1
        fi
    else
        echo -e "${RED}‚ùå Types MONA manquants${NC}"
        return 1
    fi
    
    echo ""
}

# Fonction pour v√©rifier les utilitaires MONA
check_mona_utils() {
    echo -e "${BLUE}üîß V√©rification utilitaires MONA...${NC}"
    
    # V√©rifier scoring-system
    if [ -f "shared/utils/scoring-system.ts" ]; then
        echo -e "${GREEN}‚úÖ Scoring system pr√©sent${NC}"
        
        if grep -q "ARTIST_SCORING_SYSTEM" shared/utils/scoring-system.ts; then
            echo -e "  ‚úÖ ARTIST_SCORING_SYSTEM"
        else
            echo -e "${RED}  ‚ùå ARTIST_SCORING_SYSTEM manquant${NC}"
            return 1
        fi
        
        if grep -q "calculateTotalScore" shared/utils/scoring-system.ts; then
            echo -e "  ‚úÖ calculateTotalScore"
        else
            echo -e "${RED}  ‚ùå calculateTotalScore manquant${NC}"
            return 1
        fi
    else
        echo -e "${RED}‚ùå Scoring system manquant${NC}"
        return 1
    fi
    
    # V√©rifier contact-templates
    if [ -f "shared/utils/contact-templates.ts" ]; then
        echo -e "${GREEN}‚úÖ Contact templates pr√©sents${NC}"
        
        if grep -q "CONTACT_TEMPLATES" shared/utils/contact-templates.ts; then
            echo -e "  ‚úÖ CONTACT_TEMPLATES"
        else
            echo -e "${RED}  ‚ùå CONTACT_TEMPLATES manquant${NC}"
            return 1
        fi
        
        if grep -q "personalizeTemplate" shared/utils/contact-templates.ts; then
            echo -e "  ‚úÖ personalizeTemplate"
        else
            echo -e "${RED}  ‚ùå personalizeTemplate manquant${NC}"
            return 1
        fi
    else
        echo -e "${RED}‚ùå Contact templates manquants${NC}"
        return 1
    fi
    
    echo ""
}

# Fonction pour v√©rifier les exports
check_exports() {
    echo -e "${BLUE}üì¶ V√©rification exports...${NC}"
    
    # V√©rifier exports types
    if [ -f "shared/types/index.ts" ] && grep -q "mona-business-model" shared/types/index.ts; then
        echo -e "${GREEN}‚úÖ Export types MONA configur√©${NC}"
    else
        echo -e "${RED}‚ùå Export types MONA manquant${NC}"
        return 1
    fi
    
    # V√©rifier exports utils
    if [ -f "shared/utils/index.ts" ] && grep -q "scoring-system" shared/utils/index.ts; then
        echo -e "${GREEN}‚úÖ Export utils MONA configur√©${NC}"
    else
        echo -e "${RED}‚ùå Export utils MONA manquant${NC}"
        return 1
    fi
    
    echo ""
}

# Fonction pour v√©rifier la coh√©rence des donn√©es
check_data_consistency() {
    echo -e "${BLUE}üîç V√©rification coh√©rence donn√©es...${NC}"
    
    # V√©rifier que les offres MONA sont coh√©rentes
    if grep -q "MONA_OFFERS" shared/types/mona-business-model.ts; then
        echo -e "${GREEN}‚úÖ Offres MONA d√©finies${NC}"
        
        # V√©rifier les 3 offres principales
        if grep -q "starter_mini" shared/types/mona-business-model.ts; then
            echo -e "  ‚úÖ MONA 290"
        else
            echo -e "${RED}  ‚ùå MONA 290 manquant${NC}"
            return 1
        fi
        
        if grep -q "starter_classic" shared/types/mona-business-model.ts; then
            echo -e "  ‚úÖ MONA 390"
        else
            echo -e "${RED}  ‚ùå MONA 390 manquant${NC}"
            return 1
        fi
        
        if grep -q "starter_premium" shared/types/mona-business-model.ts; then
            echo -e "  ‚úÖ MONA 490+"
        else
            echo -e "${RED}  ‚ùå MONA 490+ manquant${NC}"
            return 1
        fi
    else
        echo -e "${RED}‚ùå Offres MONA manquantes${NC}"
        return 1
    fi
    
    # V√©rifier les 10 blocs de d√©veloppement
    if grep -q "DEVELOPMENT_BLOCKS" shared/types/mona-business-model.ts; then
        echo -e "${GREEN}‚úÖ Blocs de d√©veloppement d√©finis${NC}"
        
        # V√©rifier quelques blocs cl√©s
        for block in "onboarding" "artistic_direction" "production" "marketing" "strategy"; do
            if grep -q "$block" shared/types/mona-business-model.ts; then
                echo -e "  ‚úÖ $block"
            else
                echo -e "${RED}  ‚ùå $block manquant${NC}"
                return 1
            fi
        done
    else
        echo -e "${RED}‚ùå Blocs de d√©veloppement manquants${NC}"
        return 1
    fi
    
    echo ""
}

# Fonction pour v√©rifier les sp√©cificit√©s SPARK
check_spark_specificities() {
    echo -e "${BLUE}üåü V√©rification sp√©cificit√©s SPARK...${NC}"
    
    # V√©rifier les types SPARK sp√©cifiques
    if grep -q "SparkCollectiveDimension" shared/types/mona-business-model.ts; then
        echo -e "${GREEN}‚úÖ Dimension collective SPARK${NC}"
    else
        echo -e "${RED}‚ùå Dimension collective SPARK manquante${NC}"
        return 1
    fi
    
    if grep -q "ProgressiveStructuration" shared/types/mona-business-model.ts; then
        echo -e "${GREEN}‚úÖ Structuration progressive${NC}"
    else
        echo -e "${RED}‚ùå Structuration progressive manquante${NC}"
        return 1
    fi
    
    if grep -q "SponsorCollectiveApproach" shared/types/mona-business-model.ts; then
        echo -e "${GREEN}‚úÖ Approche sponsors collective${NC}"
    else
        echo -e "${RED}‚ùå Approche sponsors collective manquante${NC}"
        return 1
    fi
    
    # V√©rifier les templates SPARK
    if grep -q "spark_invitation" shared/utils/contact-templates.ts; then
        echo -e "${GREEN}‚úÖ Template invitation SPARK${NC}"
    else
        echo -e "${RED}‚ùå Template invitation SPARK manquant${NC}"
        return 1
    fi
    
    echo ""
}

# Fonction pour afficher le r√©sum√©
show_summary() {
    echo -e "${PURPLE}üìä R√©sum√© du mod√®le business MONA :${NC}"
    echo ""
    echo -e "${CYAN}‚úÖ Syst√®me de scoring artistique int√©gr√©${NC}"
    echo -e "${CYAN}‚úÖ Formules MONA adapt√©es${NC}"
    echo -e "${CYAN}‚úÖ Templates de communication personnalis√©s${NC}"
    echo -e "${CYAN}‚úÖ 10 blocs de d√©veloppement${NC}"
    echo -e "${CYAN}‚úÖ Sp√©cificit√©s SPARK pr√©serv√©es${NC}"
    echo ""
    echo -e "${GREEN}üéâ MONA x SPARK est pr√™t avec le mod√®le business MONA !${NC}"
    echo ""
    echo -e "${YELLOW}üí° Caract√©ristiques du mod√®le MONA :${NC}"
    echo -e "   ‚Ä¢ Dimension collective SPARK"
    echo -e "   ‚Ä¢ Structuration progressive"
    echo -e "   ‚Ä¢ Approche sponsors collective"
    echo -e "   ‚Ä¢ √âv√©nements cr√©atifs collectifs"
    echo ""
}

# Fonction principale
main() {
    echo -e "${GREEN}üîç D√©but de la v√©rification mod√®le business MONA...${NC}"
    echo ""
    
    local errors=0
    
    # V√©rifications
    check_mona_types || ((errors++))
    check_mona_utils || ((errors++))
    check_exports || ((errors++))
    check_data_consistency || ((errors++))
    check_spark_specificities || ((errors++))
    
    echo ""
    
    if [ $errors -eq 0 ]; then
        show_summary
        echo -e "${GREEN}‚úÖ V√©rification mod√®le business MONA termin√©e avec succ√®s !${NC}"
        exit 0
    else
        echo -e "${RED}‚ùå V√©rification mod√®le business MONA termin√©e avec $errors erreur(s)${NC}"
        echo -e "${YELLOW}üîß Corrigez les erreurs avant de continuer${NC}"
        exit 1
    fi
}

# Ex√©cuter la fonction principale
main 